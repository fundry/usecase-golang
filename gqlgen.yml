schema:
  - graph/schema/**/*.graphqls

exec:
  filename: graph/generated/generated.go
  package: generated

# Uncomment to enable federation
# federation:
#   filename: graph/generated/federation.go
#   package: generated

# Where should any generated models go?
model:
  filename: graph/model/models_gen.go
  package: model

# Where should the resolver implementations go?
resolver:
  layout: follow-schema
  dir: graph/resolvers
  filename: graph/resolvers/resolvers.go
  package: resolvers

# Optional: turn on use `gqlgen:"fieldName"` tags in your models
# struct_tag: json

# Optional: turn on to use []Thing instead of []*Thing
# omit_slice_element_pointers: false

# Optional: set to speed up generation time by not performing a final validation pass.
# skip_validation: true

autobind:
  - "github.com/vickywane/usecase-server/graph/model"

# The first line in each type will be used as defaults for resolver arguments and
# modelgen, the others will be allowed when binding to fields. Configure them to
# your liking
models:
  ID:
    model:
      - github.com/99designs/gqlgen/graphql.IntID #added by me
      - github.com/99designs/gqlgen/graphql.ID
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  User:
    fields:
      cases:
        resolver: true
      usecase:
        resolver: true
      bookmarkedCases:
        resolver: true
      bookmarkedUsecase:
        resolver: true
  Case:
    fields:
      author:
        resolver: true
      collaborators:
        resolver: true
  Organization:
    fields:
      createdBy:
        resolver: true
      cases:
        resolver: true
      usecases:
        resolver: true
      member:
        resolver: true
  Jotter:
    fields:
      usecase:
        resolver: true
      contributors:
        resolver: true
      createdBy:
        resolver: true
  Usecase:
    fields:
      author:
        resolver: true
      cases:
        resolver: true


